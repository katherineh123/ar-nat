# AR Lab Assistant Workflow Configuration

# Define the RAG tool (the only tool)
functions:
  rag_question_answering:
    _type: rag_question_answering
    pdf_path: "src/ar_lab_assistant/data/Kirby-Bauer-Disk-Diffusion-Susceptibility-Test-Protocol.pdf"
    experiment_type: "Kirby-Bauer disk diffusion assay"
    max_results: 3
  
  # Define the ReAct agents for Q&A (using NAT's built-in react_agent)
  qa_agent_a:
    _type: react_agent
    tool_names: [rag_question_answering]
    llm_name: qa_llm
    verbose: true
    additional_instructions: "You are a helpful lab assistant for the Kirby-Bauer disk diffusion assay experiment. Use the RAG tool to search for relevant information from the experiment protocol to answer the student's questions accurately. Provide clear, concise answers based on the retrieved information. If the information isn't in the protocol, terminate and make your final output say you couldn't find the information."
    max_tool_calls: 5
  
  qa_agent_b:
    _type: react_agent
    tool_names: [rag_question_answering]
    llm_name: qa_llm
    verbose: true
    additional_instructions: "You are a helpful lab assistant for the Kirby-Bauer disk diffusion assay experiment. The student has just completed the visual process guidance through the experiment. Use the RAG tool to search for relevant information from the experiment protocol to answer their follow-up questions. Provide clear, helpful answers based on the retrieved information. If the information isn't in the protocol, terminate and make your final output say you couldn't find the information."
    max_tool_calls: 5
  
  # Define all the node functions
  entry_node:
    _type: entry_node
    greeting_message: "I am a tool for lab science students. Today, we will be following a procedure to perform the Kirby-Bauer disk diffusion assay experiment, which is a method used to determine the effectiveness of antibiotics against specific bacteria. Let's get started! We can begin by answering any initial questions you have for me, or we can jump right into it and I can guide you through the experiment."
  
  router_a_node:
    _type: router_node
    router_name: "router_a"
    llm_name: routing_llm
    routing_prompt: |
      You are a routing assistant for a lab experiment workflow. Based on the user's response, determine which route to take.
      
      Available routes:
      • **end** - User wants to finish/end the session (keywords: end, finish, done, exit, quit, stop, log session, end session)
      • **vpg** - User wants to start/begin the visual process guidance through the experiment (keywords: start, begin, guide, procedure, experiment, let's start, ready to start)
      • **qa** - User has a question about the experiment (keywords: question, ask, what, how, why, tell me, explain)
      • **reprompt** - User's intent is unclear or they need to be redirected back on track
      
      Respond with ONLY the route name (end, vpg, qa, or reprompt), nothing else.
    available_routes: ["end", "vpg", "qa", "reprompt"]
    default_route: "reprompt"
  
  qa_node_a:
    _type: qa_node
    qa_agent_name: qa_agent_a
    no_question_message: "I didn't receive a question. Could you please ask me something about the experiment?"
    follow_up_prompt: "Do you have any other questions about the experiment, or would you like me to guide you through it?"
  
  vpg_node:
    _type: vpg_node
    experiment_type: "Kirby-Bauer disk diffusion assay"
  
  reprompt_node_a:
    _type: reprompt_node
    reprompt_message: "I'm here to help you with the Kirby-Bauer disk diffusion assay experiment. So would you like to ask initial questions about the experiment, or shall we dive into it?"
  
  router_b_node:
    _type: router_node
    router_name: "router_b"
    llm_name: routing_llm
    routing_prompt: |
      You are a routing assistant for a lab experiment workflow. The user has just completed the visual process guidance. Based on their response, determine which route to take.
      
      Available routes:
      • **end** - User wants to finish/end the session without logging (keywords: end, finish, done, exit, quit, stop)
      • **qa** - User has a follow-up question about the experiment they just performed (keywords: question, ask, what, how, why, tell me, explain)
      • **log** - User wants to log the session and finish (keywords: log, log session, yes to logging)
      • **reprompt** - User's intent is unclear or they need to be redirected back on track
      
      Respond with ONLY the route name (end, qa, log, or reprompt), nothing else.
    available_routes: ["end", "qa", "log", "reprompt"]
    default_route: "reprompt"
  
  qa_node_b:
    _type: qa_node
    qa_agent_name: qa_agent_b
    no_question_message: "I didn't receive a question. Could you please ask me something about the experiment we just performed?"
    follow_up_prompt: "Do you have any other questions about the experiment, or would you like to log this session and finish?"
  
  log_session_node:
    _type: log_session_node
    db_path: "data/experiment_logs.db"
    experiment_type: "Kirby-Bauer disk diffusion assay"
  
  end_session_node:
    _type: end_session_node
    end_message: "Session ended. Thank you for using the AR Lab Assistant!"
  
  reprompt_node_b:
    _type: reprompt_node
    reprompt_message: "I'm here to help you with questions about the experiment we just performed. So would you like to ask more questions about the experiment, or would you like to log this session and finish?"

llms:
  nim_llm:
    _type: nim
    model_name: meta/llama-3.1-70b-instruct
    temperature: 0.0
  
  routing_llm:
    _type: nim
    model_name: meta/llama-3.1-70b-instruct
    temperature: 0.0
  
  qa_llm:
    _type: nim
    model_name: meta/llama-3.1-70b-instruct
    temperature: 0.0

# Main workflow configuration
workflow:
  _type: ar_lab_assistant
  llm_name: nim_llm
  verbose: true
  
  # Reference all the node functions
  entry_node_name: entry_node
  router_a_node_name: router_a_node
  qa_node_a_name: qa_node_a
  vpg_node_name: vpg_node
  reprompt_node_a_name: reprompt_node_a
  router_b_node_name: router_b_node
  qa_node_b_name: qa_node_b
  log_session_node_name: log_session_node
  end_session_node_name: end_session_node
  reprompt_node_b_name: reprompt_node_b
